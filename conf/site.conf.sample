#
# local.conf covers user settings, site.conf covers site specific information
# such as proxy server addresses and optionally any shared download location
#
# SITE_CONF_VERSION is increased each time build/conf/site.conf
# changes incompatibly
SCONF_VERSION = "1"

# Uncomment to cause CVS to use the proxy host specified
#CVS_PROXY_HOST = "proxy.example.com"
#CVS_PROXY_PORT = "81"

# For svn, you need to create ~/.subversion/servers containing:
#[global]
#http-proxy-host = proxy.example.com
#http-proxy-port = 81
#

# Uncomment to cause git to use the proxy host specificed 
# although this only works for http
#GIT_PROXY_HOST = "proxy.example.com"
#GIT_PROXY_PORT = "81"
#export GIT_PROXY_COMMAND = "${COREBASE}/scripts/oe-git-proxy-command"

# Set to yes to have a gitconfig generated for handling proxies; you
# might not want this if you have all that set in your global git
# configuration. If you don't enable it, the rest of the entries
# (_PROXY_IGNORE, etc) don't really work that well
#GIT_CORE_CONFIG = "Yes"

# Space separate list of hosts to ignore for GIT proxy
#GIT_PROXY_IGNORE = "host.server.com another.server.com"

# If SOCKS is available run the following command to comple a simple transport
# gcc scripts/oe-git-proxy-socks.c -o oe-git-proxy-socks
# and then share that binary somewhere in PATH, then use the following settings
#GIT_PROXY_HOST = "proxy.example.com"
#GIT_PROXY_PORT = "81"

# GIT_PROXY_COMMAND is used by git to override all proxy settings from
# configuration files, so we prefix OE_ to avoid breaking havoc on the
# generated (or local) gitconfig's.
#OE_GIT_PROXY_COMMAND = "${COREBASE}/scripts/oe-git-proxy-socks-command"


# Uncomment this to use a shared download directory
#DL_DIR = "/some/shared/download/directory/"

